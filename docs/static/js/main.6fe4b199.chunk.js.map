{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectCurrency","onChangeCurrency","amount","onChangeAmount","className","type","value","onChange","name","id","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","exchangeRate","setExchangeRate","toCurrency","setToCurrency","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAEe,SAASA,EAAYC,GAAQ,IAClCC,EAA6ED,EAA7EC,gBAAiBC,EAA4DF,EAA5DE,eAAgBC,EAA4CH,EAA5CG,iBAAkBC,EAA0BJ,EAA1BI,OAAOC,EAAmBL,EAAnBK,eAElE,OACE,6BACE,2BAAOC,UAAU,QAAQC,KAAK,SAASC,MAAOJ,EAAQK,SAAUJ,IAChE,4BAAQK,KAAK,GAAGC,GAAG,GAAGH,MAAON,EAAgBO,SAAUN,GACpDF,EAAgBW,KAAI,SAAAC,GAAM,OACzB,4BAAQC,IAAKD,EAAQL,MAAOK,GACzBA,QCRb,IAAME,EAAQ,yCAyECC,MAvEf,WAAgB,IAOVC,EAAUC,EAPD,EACiCC,mBAAS,IAD1C,mBACNlB,EADM,KACWmB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAG2BH,qBAH3B,mBAGNI,EAHM,KAGQC,EAHR,OAIuBL,qBAJvB,mBAINM,EAJM,KAIMC,EAJN,OAKeP,mBAAS,GALxB,mBAKNf,EALM,KAKEuB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KA6Cb,OArCID,GACFV,EAAad,EACba,EAAWb,EAASmB,IAEpBN,EAAWb,EACXc,EAAad,EAASmB,GAExBO,qBAAU,WACKC,MAAMhB,GAChBiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBd,EAAcU,GACdZ,EAAgBW,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACJT,GAAgBI,GAClBM,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CI,IAC/CO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIX,EAAgBW,EAAKI,MAAMd,SAE5C,CAACJ,EAAcI,IAahB,oCACE,uCACA,kBAAC1B,EAAD,CACEE,gBAAiBA,EACjBC,eAAgBmB,EAChBhB,eAhBN,SAAgCoC,GAC9Bd,EAAUc,EAAEC,OAAOlC,OACnBqB,GAAwB,IAepB1B,iBAAkB,SAAAsC,GAChBnB,EAAgBmB,EAAEC,OAAOlC,QAE3BJ,OAAQc,IAEV,yBAAKZ,UAAU,UAAf,KACA,kBAACP,EAAD,CACEE,gBAAiBA,EACjBC,eAAgBuB,EAChBtB,iBAAkB,SAAAsC,GAChBf,EAAce,EAAEC,OAAOlC,QAEzBJ,OAAQa,EACRZ,eAzBN,SAA8BoC,GAC5Bd,EAAUc,EAAEC,OAAOlC,OACnBqB,GAAwB,QC1C5Bc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6fe4b199.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CurrencyRow(props) {\r\n  const { currencyOptions, selectCurrency, onChangeCurrency, amount,onChangeAmount } = props;\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"input\" type=\"number\" value={amount} onChange={onChangeAmount}/>\r\n      <select name=\"\" id=\"\" value={selectCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map(option => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst BASE_URL = `https://api.exchangeratesapi.io/latest`;\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n  useEffect(() => {\n    const data = fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(data.base);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency && toCurrency) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <>\n      <h1>Convert</h1>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectCurrency={fromCurrency}\n        onChangeAmount={handleFromAmountChange}\n        onChangeCurrency={e => {\n          setFromCurrency(e.target.value);\n        }}\n        amount={fromAmount}\n      />\n      <div className=\"equals\">=</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectCurrency={toCurrency}\n        onChangeCurrency={e => {\n          setToCurrency(e.target.value);\n        }}\n        amount={toAmount}\n        onChangeAmount={handleToAmountChange}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}